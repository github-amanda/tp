@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":StoreMandoParser" as StoreMandoParser LOGIC_COLOR
participant ":ReminderCommandParser" as ReminderCommandParser LOGIC_COLOR
participant "r:ReminderCommand" as ReminderCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "p:ItemExpiringPredicate" as ItemExpiringPredicate MODEL_COLOR
participant "c: ItemComparatorByExpiryDate" as ItemComparatorByExpiryDate MODEL_COLOR
end box

[-> LogicManager : execute("reminder 1 week")
activate LogicManager

LogicManager -> StoreMandoParser : parseCommand("reminder 1 week")
activate StoreMandoParser

create ReminderCommandParser
StoreMandoParser -> ReminderCommandParser
activate ReminderCommandParser

ReminderCommandParser --> StoreMandoParser
deactivate ReminderCommandParser

StoreMandoParser -> ReminderCommandParser : parse("1 week")
activate ReminderCommandParser

ReminderCommandParser -> ReminderCommandParser : timeConversion(1, "week")
activate ReminderCommandParser

ReminderCommandParser --> ReminderCommandParser : 7
deactivate ReminderCommandParser

create ItemExpiringPredicate
ReminderCommandParser -> ItemExpiringPredicate : ItemExpiringPredicate(7)
activate ItemExpiringPredicate

ItemExpiringPredicate --> ReminderCommandParser : p
deactivate ItemExpiringPredicate

create ReminderCommand
ReminderCommandParser -> ReminderCommand : ReminderCommand(p)
activate ReminderCommand

ReminderCommand --> ReminderCommandParser : r
deactivate ReminderCommand

ReminderCommandParser --> StoreMandoParser : r
deactivate ReminderCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ReminderCommandParser -[hidden]-> StoreMandoParser
destroy ReminderCommandParser

StoreMandoParser --> LogicManager : r
deactivate StoreMandoParser

LogicManager -> ReminderCommand : execute(model)
activate ReminderCommand

ReminderCommand -> Model : updateCurrentPredicate(p)
activate Model

Model --> ReminderCommand
deactivate Model

ReminderCommand -> Model : getCurrentPredicate()
activate Model

Model --> ReminderCommand : currentPredicate
deactivate Model

ReminderCommand -> Model : updateFilteredItemList(currentPredicate)
activate Model

Model --> ReminderCommand
deactivate Model

create ItemComparatorByExpiryDate
ReminderCommand -> ItemComparatorByExpiryDate : ItemComparatorByExpiryDate()
activate ItemComparatorByExpiryDate

ItemComparatorByExpiryDate --> ReminderCommand : c
deactivate ItemComparatorByExpiryDate

ReminderCommand -> Model : updateSortedItemList(c)
activate Model

Model --> ReminderCommand
deactivate Model

ReminderCommand -> Model : getSortedItemList()
activate Model

Model --> ReminderCommand : sortedItemList
deactivate Model

ReminderCommand -> Model : setItems(sortedItemList)
activate Model

Model --> ReminderCommand
deactivate Model

create CommandResult
ReminderCommand -> CommandResult
activate CommandResult

CommandResult --> ReminderCommand : result
deactivate CommandResult

ReminderCommand --> LogicManager : result
deactivate ReminderCommand

[<--LogicManager : result
deactivate LogicManager
@enduml
